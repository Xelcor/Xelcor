module ColorSensorStateMachine(
    input clk,
    input reset,
    input signal_in,
    output reg done_color = 0,
    output reg [31:0] red = 0,
    output reg [31:0] green = 0,
    output reg [31:0] blue = 0,
    output reg S2 = 0,
    output reg S3 = 0,
    output reg [1:0] color_state = 0,
    output [31:0] frequency,
    output done
);

    // Frequency measurement instance
    freq_meas f1 (
        .CLK100MHZ(clk),
        .signal_in(signal_in),
        .reset(reset),
        .frequency(frequency),
        .done(done)
    );

    localparam BLANK_STATE = 2'b00, RED_STATE = 2'b01, GREEN_STATE = 2'b10, BLUE_STATE = 2'b11;

    always @(posedge done) begin
            case (color_state)
                BLANK_STATE: begin
                    done_color <= 0;
                    color_state <= RED_STATE;
                    S2 <= 1'b0; // Select red photodiode
                    S3 <= 1'b0;
                end
                RED_STATE: begin
                    red <= frequency;
                    color_state <= GREEN_STATE;
                    S2 <= 1'b1; // Select green photodiode
                    S3 <= 1'b1;
                end
                GREEN_STATE: begin
                    green <= frequency;
                    color_state <= BLUE_STATE;
                    S2 <= 1'b0; // Select blue photodiode
                    S3 <= 1'b1;
                end
                BLUE_STATE: begin
                    blue <= frequency;
                    done_color <= 1; // All color frequencies captured
                    color_state <= BLANK_STATE;
                    S2 <= 1'b0;
                    S3 <= 1'b0;
                end
            endcase
    end
endmodule

