module servo_pwm_control (
    input clk,             // System clock
    input reset,           // Reset signal
    input [7:0] duty,      // Duty cycle (0-255 for 0-100%)
    input enable,          // Motor enable signal
    input direction,       // Motor direction signal
    output reg pwm_out,    // PWM output to motor
    output reg motor_dir   // Motor direction output
);
    // Parameters
    parameter WIDTH = 8;   // Contuer width for 8-bit res
    parameter MAX_COUNT = 255; // Maximum contuer value for 8-bit PWM

    // Internal registers
    reg [WIDTH-1:0] counter;

    // PWM Logic
    always @(posedge clk or posedge reset) begin
        if (reset) begin
            counter <= 0;
            pwm_out <= 0;
        end else if (enable) begin
            if (counter >= MAX_COUNT)
                counter <= 0;
            else
                counter <= counter + 1;

            pwm_out <= (counter < duty); // Compare counter with duty cycle
        end else begin
            pwm_out <= 0; // Disable PWM when enable is low
        end
    end

    // Motor Direction Logic
    always @(posedge clk or posedge reset) begin
        if (reset) begin
            motor_dir <= 0;
        end else begin
            motor_dir <= direction; // Set motor direction
        end
    end
endmodule
